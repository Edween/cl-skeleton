;; Copyright (c) ${COPYRIGHT_YEAR} ${AUTHOR_NAME} <${AUTHOR_EMAIL}>
;; All rights reserved.
;;
;; Redistribution and use in source and binary forms, with or without
;; modification, are permitted provided that the following conditions
;; are met:
;;
;;  1. Redistributions of source code must retain the above copyright
;;     notice, this list of conditions and the following disclaimer
;;     in this position and unchanged.
;;  2. Redistributions in binary form must reproduce the above copyright
;;     notice, this list of conditions and the following disclaimer in the
;;     documentation and/or other materials provided with the distribution.
;;
;; THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS OR
;; IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
;; OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
;; IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT, INDIRECT,
;; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
;; NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
;; DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
;; THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
;; (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
;; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

(defpackage :${PROJECT_NAME}-test-system
  (:use :cl :asdf))
(in-package :${PROJECT_NAME}-test-system)

(defsystem "${PROJECT_NAME}.test"
  :name "${PROJECT_NAME}.test"
  :long-name "${PROJECT_LONG_NAME}.test"
  :description "${PROJECT_DESCRIPTION}"
  :version "${PROJECT_VERSION}"
  :author "${AUTHOR_NAME} <${AUTHOR_EMAIL}>"
  :maintainer "${MAINTAINER_NAME} <${MAINTAINER_EMAIL}>"
  :license "${LICENSE}"
  :homepage "https://github.com/${GITHUB_USERNAME}/${PROJECT_NAME}"
  :bug-tracker "https://github.com/${GITHUB_USERNAME}/${PROJECT_NAME}"
  :source-control "https://github.com/${GITHUB_USERNAME}/${PROJECT_NAME}"
  :depends-on (:rove
               :${PROJECT_NAME})
  :components ((:module "tests"
                :pathname #P"tests/"
                :serial t
                :components ((:file "package"))))
  :perform (test-op (op c) (uiop:symbol-call :rove :run-suite :${PROJECT_NAME}.test)))
